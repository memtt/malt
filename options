#!/bin/sh
############################################################
#    PROJECT  : MALT (MALoc Tracker)
#    VERSION  : 1.2.6
#    DATE     : 06/2025
#    LICENSE  : CeCILL-C
#    FILE     : options
#-----------------------------------------------------------
#    AUTHOR   : Sébastien Valat - 2018 - 2022
#    AUTHOR   : Sébastien Valat (INRIA) - 2024 - 2025
############################################################

############################################################
#set project name
cfg_set_projet "MALT"

############################################################
#profiler
cfg_add_enable_option --name='profiler' \
						--on='-DENABLE_PROFILER=${ON}' \
						--doc='Disable the profiler and only install the GUI.' \
						--invert-help
#test
cfg_add_enable_option --name='tests' \
						--on='-DENABLE_TESTS=${ON}' \
						--doc='Disable unit tests' \
						--invert-help
#gcc test coverage
cfg_add_enable_option --name='gcc-coverage'  \
						--on='-DENABLE_GCC_COVERAGE=${ON}' \
						--doc='Enable GCC option to generate test coverage of the lib' \
#junit xml out
cfg_add_enable_option --name='junit-output'  \
						--on='-DENABLE_JUNIT_OUTPUT=${ON}' \
						--doc='Save test output in JUnit format (only in self-test mode)' 
#valgrind
cfg_add_enable_option --name='valgrind' \
						--on='-DENABLE_VALGRIND=${ON}' \
						--doc='Enable running unit tests into valgrind to generate reports'
#jenkins full features
cfg_add_enable_option --name='jenkins' \
						--on-enable-inherit='--enable-valgrind --enable-junit-output --enable-debug "CXXFLAGS=-Wall -fprofile-arcs -ftest-coverage"' \
						--doc='Enable all checking modes (unit, valgrind, coverage...)' \
						--only='enable'

#test
cfg_add_enable_option --name='link-optim' \
						--on='-DENABLE_LINK_OPTIM=${ON}' \
						--doc='Disable link optimization (LTO + visibility=hidden).' \
						--invert-help

#test
cfg_add_enable_option --name='ipo' \
						--on='-DENABLE_IPO=${ON}' \
						--doc='Disable LTO specifically.' \
						--invert-help

#test
cfg_add_enable_option --name='python' \
						--on='-DENABLE_PYTHON=${ON}' \
						--doc='Enable the python support.'

#JeMalloc built for MALT
cfg_add_enable_option --name='jemalloc' \
						--on='-DENABLE_JEMALLOC=${ON}' \
						--doc='Enable building the internal jemalloc to get better internal memory handling.' \

############################################################
#libunwind
cfg_add_with_option --name='libunwind' \
						--doc='Define prefix to find libunwind [/usr]' \
						--var='LIBUNWIND_PREFIX'

#libelf
cfg_add_with_option --name='libelf' \
						--doc='Define prefix to find libelf [/usr]' \
						--var='LIBELF_PREFIX'

#where to search python
cfg_add_with_option --name='python' \
						--doc='Define prefix to find python [/usr]' \
						--var='Python3_ROOT_DIR'

#JeMalloc built for MALT
#cfg_add_with_option --name='malt-jemalloc' \
#						--doc='Define prefix to find JeMalloc built for MALT internals [/usr]' \
#						--var='MALTJEMALLOC_PREFIX'

#Python linking way for MALT
cfg_add_with_option --name='python-linking' \
						--doc='Define how to link to python (LAZY or NATIVE). [LAZY]' \
						--var='PORTABILITY_PYTHON'

#where to search python
cfg_add_with_option --name='cargo' \
						--doc='Define prefix to find cargo [/usr]' \
						--var='CARGO_PREFIX'

############################################################
#If we want to document extra options
#CFG_CUSTOM_HELP="My custom options:"

############################################################
# here we can parse our own options if we want
# Vars available are :
#  - $arg : full argument (eg. --with-gcc=gcc)
#  - $val : value after first '=', egg 'gcc'
#  - $ON $OFF, $ENABLE, $DISABLE, $WIDTH, $WITHOUT
#cfg_parse_custom_opts()
#{
#	return 1
#}

############################################################
#pre check to ease error messages
#All cmake vars are loaded in memory as OPT_* (OPT_CMAKE_C_FLAGS)
#cfg_custom_pre_check()
#{
#	return 1
#}
